//main.js
//创建requirejs
requirejs.config({
    paths:{
        'jquery':'jquery'
    }
});

//接收，用$表示jquery.js  用mokuai表示mukuai.js
requirejs(['jquery','mukuai'],function ($,mokuai) {
    //实例化kuai构造函数，返回mokuai的属性，需要对象参数
    var kuai = new mokuai.fanhui({
        //可以用的参数
        //距离
        juli:500,
        //速度
        sudu:800
    });

    //绑定点击事件 改变this默认指向#backTop，指向kuai
    $('#backTop').on('click',$.proxy(kuai.move,kuai));
    //绑定滚动事件，监听滚动的高度
    $(window).on('scroll',function () {
        weizhi($(window).height())
    });

    weizhi($(window).height());

    //函数功能：滑动滚动条 隐藏与显示
    //当滑动超过了pos临界值(当前屏幕)，就显示出来
    function weizhi(pos) {
        if ($(window).scrollTop() > pos){
            $('#backTop').fadeIn();
        }else {
            $('#backTop').fadeOut();
        }
    }
});


mukuai.js:
/**
 * Created by Administrator on 2018/6/1.
 */
//定义模块：移动滚动条到指定的位置 以及 移动的速度
//只有入口js文件采用requirejs来引入模块文件，
// 其他模块文件依赖都用define来引入
define(['jquery'],function ($) {
    //创建一个构造函数 首字母大写区别
    //opts:用户传递的参数
    function Mukuai(opts) {
        //判断是用用户参数还是默认参数
        //{}传递一个空对象，默认参数Mukuai.MOREN，用户参数opts
        //让用户参数覆盖默认参数，生成一个新对象{} 然后返回新的对象
        //返回的值 通过this.opts属性保存
        this.opts = $.extend({},Mukuai.MOREN,opts);
        //整理重复
        this.$el =  $('html,body');
    }

    //将所有的方法添加到构造函数的原型上，内存可以只保存一份方法

    //慢速
    Mukuai.prototype.move = function () {
        //整理重复
        var opts = this.opts,
            juli = opts.juli;

        //是否到达目的地 scrollTop是否等于最终目的地opts
        if ($(window).scrollTop() !=juli){
            //是否正在滑动 在true 不在false
            // 只有不在滑动时才执行
            if (!this.$el.is(':animated')){
                   this.$el.animate({
                     scrollTop:juli
                 },opts.sudu)
            }
        }
    };

    //快速
    Mukuai.prototype.go = function () {
        //整理重复
        var juli = this.opts.juli;

        //只有没有到达目的地的时候才执行这个方法
        if ($(window).scrollTop() !=juli){
            this.$el.scrollTop(juli);
        }
    };


    //默认的参数Mukuai.MOREN
    Mukuai.MOREN = {
        juli:0,
        sudu:800
    };

    //将编译好的模块返回出去，使其能与外部通信
    return{
      fanhui:Mukuai
    };
});